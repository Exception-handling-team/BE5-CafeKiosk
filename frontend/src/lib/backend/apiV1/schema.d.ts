/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/admin/edit/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["editStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/edit/info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["editInfo"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/portone/webhook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["webhook"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["order"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/deliver": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["deliver"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/cancel/pay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["cancelOrderAfterPay"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/cancel/buy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["cancelOrderBeforePay"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/reissue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["reissue"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["itemRegister"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/items/cat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["showCategoryItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["showAllItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/items/cat": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["showCategoryItem_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["showSingleItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["showAllItem_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/item": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["showSingleItem_1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["homeController"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/delete": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["deleteItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ApiResponseItemSimpleResponseDto: {
            message?: string;
            data?: components["schemas"]["ItemSimpleResponseDto"];
        };
        ItemSimpleResponseDto: {
            /** Format: int64 */
            itemId?: number;
            name?: string;
            /** @enum {string} */
            status?: "ON_SALE" | "SOLD_OUT";
        };
        ItemModifyInfoDto: {
            name?: string;
            /** Format: int32 */
            price?: number;
            /** Format: int32 */
            quantity?: number;
            description?: string;
        };
        ApiResponseItemResponseDto: {
            message?: string;
            data?: components["schemas"]["ItemResponseDto"];
        };
        ItemResponseDto: {
            /** Format: int64 */
            itemId?: number;
            name?: string;
            /** Format: int32 */
            price?: number;
            /** Format: int32 */
            quantity?: number;
            description?: string;
        };
        WebHook: {
            imp_uid?: string;
            merchant_uid?: string;
            status?: string;
            cancellation_id?: string;
        };
        OrderRequestDto: {
            /** Format: int64 */
            itemId?: number;
            /** Format: int32 */
            quantity?: number;
        };
        ApiResponseOrderResponseDto: {
            message?: string;
            data?: components["schemas"]["OrderResponseDto"];
        };
        OrderResponseDto: {
            /** Format: int64 */
            tradeId?: number;
            /** @enum {string} */
            status?: "BUY" | "PAY" | "END" | "REFUND" | "REFUSED";
            /** Format: int32 */
            totalPrice?: number;
            tradeUUID?: string;
        };
        DeliverRequestDto: {
            tradeUUID?: string;
        };
        ApiResponseDeliverResponseDto: {
            message?: string;
            data?: components["schemas"]["DeliverResponseDto"];
        };
        DeliverResponseDto: {
            tradeUUID?: string;
            /** @enum {string} */
            status?: "BUY" | "PAY" | "END" | "REFUND" | "REFUSED";
        };
        CancelItemRequest: {
            /** Format: int64 */
            itemId?: number;
            /** Format: int32 */
            quantity?: number;
        };
        CancelRequestDto: {
            tradeUUID?: string;
            cancelItemList?: components["schemas"]["CancelItemRequest"][];
        };
        ApiResponseCancelResponseDto: {
            message?: string;
            data?: components["schemas"]["CancelResponseDto"];
        };
        CancelResponseDto: {
            tradeUUID?: string;
            /** Format: int32 */
            refundPrice?: number;
        };
        RefundRequestDto: {
            tradeUUID?: string;
        };
        ApiResponsePayResponseDto: {
            message?: string;
            data?: components["schemas"]["PayResponseDto"];
        };
        PayResponseDto: {
            /** Format: int64 */
            tradeId?: number;
            tradeUUID?: string;
            /** @enum {string} */
            status?: "BUY" | "PAY" | "END" | "REFUND" | "REFUSED";
            /** Format: int32 */
            totalPrice?: number;
        };
        JoinRequest: {
            loginId?: string;
            password?: string;
            adminKey?: string;
        };
        ApiResponseUserResponseDto: {
            message?: string;
            data?: components["schemas"]["UserResponseDto"];
        };
        UserResponseDto: {
            /** Format: int64 */
            id?: number;
            loginId?: string;
        };
        TokenRequestDto: {
            accessToken?: string;
            refreshToken?: string;
        };
        AccessTokenResponse: {
            accessToken?: string;
        };
        ApiResponseAccessTokenResponse: {
            message?: string;
            data?: components["schemas"]["AccessTokenResponse"];
        };
        LoginRequest: {
            loginId?: string;
            password?: string;
        };
        ItemRegisterDto: {
            name?: string;
            /** Format: int32 */
            price?: number;
            description?: string;
            /** @enum {string} */
            status?: "ON_SALE" | "SOLD_OUT";
            /** @enum {string} */
            category?: "BEVERAGE" | "DESSERT" | "ETC";
            /** Format: int32 */
            quantity?: number;
        };
        ItemCategoryDto: {
            /** @enum {string} */
            category?: "BEVERAGE" | "DESSERT" | "ETC";
        };
        ApiResponseListShowSimpleItem: {
            message?: string;
            data?: components["schemas"]["ShowSimpleItem"][];
        };
        ShowSimpleItem: {
            /** Format: int64 */
            id?: number;
            name?: string;
            /** Format: int32 */
            price?: number;
            /** Format: int32 */
            quantity?: number;
            /** @enum {string} */
            status?: "ON_SALE" | "SOLD_OUT";
        };
        ApiResponseShowSimpleItem: {
            message?: string;
            data?: components["schemas"]["ShowSimpleItem"];
        };
        ApiResponseLong: {
            message?: string;
            /** Format: int64 */
            data?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    editStatus: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseItemSimpleResponseDto"];
                };
            };
        };
    };
    editInfo: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemModifyInfoDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseItemResponseDto"];
                };
            };
        };
    };
    webhook: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WebHook"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    order: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderRequestDto"][];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseOrderResponseDto"];
                };
            };
        };
    };
    deliver: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeliverRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseDeliverResponseDto"];
                };
            };
        };
    };
    cancelOrderAfterPay: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CancelRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseCancelResponseDto"];
                };
            };
        };
    };
    cancelOrderBeforePay: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefundRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponsePayResponseDto"];
                };
            };
        };
    };
    signup: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["JoinRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseUserResponseDto"];
                };
            };
        };
    };
    reissue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenRequestDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseAccessTokenResponse"];
                };
            };
        };
    };
    login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseAccessTokenResponse"];
                };
            };
        };
    };
    itemRegister: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemRegisterDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseItemResponseDto"];
                };
            };
        };
    };
    showCategoryItem: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ItemCategoryDto"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListShowSimpleItem"];
                };
            };
        };
    };
    showAllItem: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListShowSimpleItem"];
                };
            };
        };
    };
    showCategoryItem_1: {
        parameters: {
            query: {
                category: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListShowSimpleItem"];
                };
            };
        };
    };
    showSingleItem: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseShowSimpleItem"];
                };
            };
        };
    };
    showAllItem_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseListShowSimpleItem"];
                };
            };
        };
    };
    showSingleItem_1: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseShowSimpleItem"];
                };
            };
        };
    };
    homeController: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": Record<string, never>;
                };
            };
        };
    };
    deleteItem: {
        parameters: {
            query: {
                id: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["ApiResponseLong"];
                };
            };
        };
    };
}
